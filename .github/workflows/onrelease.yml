name: Release Event

on:
  release:
    types: [released]

env:
  DEPLOY_ENV: prod

jobs:
  do-staging-things:
    runs-on: ubuntu-latest
    outputs:
      download-url: ${{steps.upload.outputs.url}}
    steps:
      - uses: actions/checkout@v2
      - name: Say hello
        run: echo ${GITHUB_REF} is not yet released
      - name: Make a file
        run: echo $(date) is when this was created for ${GITHUB_REF} > release-file.txt
      - name: Add upload URL to environment
        run: echo UPLOAD_URL=$(echo '${{github.event.release.upload_url}}' | sed -e 's/{?name,label}//') >> $GITHUB_ENV
      - name: Mess with that
        run: echo $UPLOAD_URL
      - name: Attempt an upload
        id: upload
        run: |
          UPLOAD_JSON=$(curl -f -s -X POST --header 'Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
            --data-binary @release-file.txt \
            --header "Accept: application/vnd.github.v3+json" \
            --header "Content-type: text/plain" \
            "$UPLOAD_URL?name=MyFile2.txt&label=Fancy%20File%202")
          echo $UPLOAD_JSON
          DOWNLOAD_URL=$(echo "$UPLOAD_JSON" | jq .url)
          if [[ -n "$DOWNLOAD_URL" ]]; then
            echo Uploaded file to $DOWNLOAD_URL
            echo "::set-output name=url::$DOWNLOAD_URL"
          else
            echo "Upload unsuccessful (probably you already uploaded it?)"
            exit 1
          fi

  do-release-things:
    runs-on: ubuntu-latest
    needs: do-staging-things
    outputs:
      stuff: ${{steps.store-things.outputs.file-content}}
    environment: Fake Production
    steps:
      - uses: actions/checkout@v2
      - name: Say hello
        run: echo ${GITHUB_REF} is released
    #  - name: Get download URL
        # run: echo DOWNLOAD=$(jq -r '.release.assets[] | select(.label=="Fancy File 2") | .url' < ${GITHUB_EVENT_PATH}) >> $GITHUB_ENV
        # run: echo DOWNLOAD=$(echo '${{toJSON(github.event.release.assets)}}'| jq -r '.[] | select(.label=="Fancy File") | .url') >> $GITHUB_ENV
      - name: Fetch it
        run: |
          curl -L -v \
           --header 'Accept: application/octet-stream' \
           --header 'Authorization: Bearer ${{secrets.GITHUB_TOKEN}}' \
           ${{needs.do-staging-things.outputs.download-url}} \
           -o releasefile.txt
      - name: Look at it
        id: store-things
        run: echo "::set-output name=file-content::$(cat releasefile.txt)"
  do-followup-things:
    runs-on: ubuntu-latest 
    needs: do-release-things
    steps:
      - name: Fetch that output
        working-directory: /
        run: |
          echo "File content follows"
          echo ${{needs.do-release-things.outputs.stuff}}
